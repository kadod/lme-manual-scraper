
> lme-saas@0.1.0 lint
> eslint


/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/analyze_category_pages.js
    1:12  error    A `require()` style import is forbidden    @typescript-eslint/no-require-imports
    2:7   warning  'path' is assigned a value but never used  @typescript-eslint/no-unused-vars
    2:14  error    A `require()` style import is forbidden    @typescript-eslint/no-require-imports
    3:22  error    A `require()` style import is forbidden    @typescript-eslint/no-require-imports
  136:20  warning  'e' is defined but never used              @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/analytics.ts
   52:10  warning  'formatMetric' is defined but never used  @typescript-eslint/no-unused-vars
  400:58  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  402:45  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  403:40  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  404:43  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  582:42  warning  'startDate' is defined but never used     @typescript-eslint/no-unused-vars
  582:61  warning  'endDate' is defined but never used       @typescript-eslint/no-unused-vars
  610:44  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/auto-response-conversations.ts
  557:51  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/auto-response.ts
    18:15  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
    19:12  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   343:9   warning  'totalRules' is assigned a value but never used  @typescript-eslint/no-unused-vars
   489:18  warning  'regexError' is defined but never used           @typescript-eslint/no-unused-vars
   517:10  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   546:12  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   586:16  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   597:18  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   597:26  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   613:15  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   623:41  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   647:9   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   671:33  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   677:18  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   677:26  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   784:3   warning  'context' is defined but never used              @typescript-eslint/no-unused-vars
   784:28  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   988:23  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  1084:22  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  1107:38  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  1125:36  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  1134:35  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  1142:16  warning  'error' is defined but never used                @typescript-eslint/no-unused-vars
  1153:33  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  1162:29  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/billing.ts
  32:3  warning  'listCustomerPaymentMethods' is defined but never used  @typescript-eslint/no-unused-vars
  33:3  warning  'listCustomerInvoices' is defined but never used        @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/chat.ts
   14:28  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  132:28  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/cross-analysis.ts
   83:13   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   98:79   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  113:13   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  134:81   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  149:13   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  167:39   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  175:114  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  200:13   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  218:39   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  226:117  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  253:13   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  274:33   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  284:13   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  286:3    warning  'filters' is defined but never used              @typescript-eslint/no-unused-vars
  304:90   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  312:25   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  322:13   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  340:39   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  348:110  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  353:61   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  355:65   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  371:13   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  389:39   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  397:113  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  402:61   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  403:65   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  404:63   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  420:13   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  441:33   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  452:13   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  454:3    warning  'filters' is defined but never used              @typescript-eslint/no-unused-vars
  471:94   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  479:33   error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  501:9    warning  'supabase' is assigned a value but never used    @typescript-eslint/no-unused-vars
  539:49   warning  'id' is defined but never used                   @typescript-eslint/no-unused-vars
  545:9    warning  'supabase' is assigned a value but never used    @typescript-eslint/no-unused-vars
  570:11   warning  'csvContent' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/forms.ts
    5:10  warning  'TablesInsert' is defined but never used  @typescript-eslint/no-unused-vars
    5:24  warning  'TablesUpdate' is defined but never used  @typescript-eslint/no-unused-vars
   15:13  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   30:27  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  209:21  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  295:53  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  438:41  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  444:28  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  447:51  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  454:30  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  541:22  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  567:41  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  754:39  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  755:40  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  757:32  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/friends.ts
   30:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   50:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   61:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   70:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   82:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   91:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  111:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  123:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  132:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  150:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  176:32  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  182:41  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/import.ts
   20:36  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   30:15  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  247:18  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  251:22  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  306:32  warning  'index' is defined but never used         @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/messages.ts
  14:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/organization.ts
  240:57  error    Unexpected any. Specify a different type   @typescript-eslint/no-explicit-any
  570:11  warning  'user' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/profile.ts
  208:44  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/public-reservations.ts
  47:9  warning  'dateStr' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/reservation-settings.ts
   10:19  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   15:26  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  143:58  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  161:72  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/reservation-types.ts
  15:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/reservations.ts
  374:31  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/segments.ts
   29:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   49:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   60:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   69:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   87:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   96:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  120:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  146:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  159:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  168:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/system.ts
   29:10  warning  'exportToJSON' is defined but never used            @typescript-eslint/no-unused-vars
   40:3   warning  'maskAPIKey' is defined but never used              @typescript-eslint/no-unused-vars
   41:3   warning  'isValidAPIKeyFormat' is defined but never used     @typescript-eslint/no-unused-vars
  115:9   error    'allData' is never reassigned. Use 'const' instead  prefer-const
  115:18  error    Unexpected any. Specify a different type            @typescript-eslint/no-explicit-any
  166:19  warning  'uploadData' is assigned a value but never used     @typescript-eslint/no-unused-vars
  215:13  error    Unexpected any. Specify a different type            @typescript-eslint/no-explicit-any
  220:12  error    Unexpected any. Specify a different type            @typescript-eslint/no-explicit-any
  245:46  error    Unexpected any. Specify a different type            @typescript-eslint/no-explicit-any
  432:13  error    Unexpected any. Specify a different type            @typescript-eslint/no-explicit-any
  434:24  error    Unexpected any. Specify a different type            @typescript-eslint/no-explicit-any
  821:39  error    Unexpected any. Specify a different type            @typescript-eslint/no-explicit-any
  871:19  warning  'uploadData' is assigned a value but never used     @typescript-eslint/no-unused-vars
  903:13  error    Unexpected any. Specify a different type            @typescript-eslint/no-explicit-any
  909:27  error    Unexpected any. Specify a different type            @typescript-eslint/no-explicit-any
  959:43  error    Unexpected any. Specify a different type            @typescript-eslint/no-explicit-any
  999:9   warning  'supabase' is assigned a value but never used       @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/tags.ts
   29:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   47:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   67:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   88:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  106:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  118:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  127:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  148:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  168:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/actions/templates.ts
   21:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   30:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   41:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   50:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   61:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   70:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   82:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   91:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  111:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  129:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  147:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  163:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/api/line/webhook/route.ts
  107:16  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  161:16  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  186:16  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/api/test-connection/route.ts
  16:19  warning  'tablesData' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/AnalyticsPageClient.tsx
  35:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/cross-analysis/[id]/page.tsx
  22:11  warning  'AnalysisItem' is defined but never used     @typescript-eslint/no-unused-vars
  30:9   warning  'params' is assigned a value but never used  @typescript-eslint/no-unused-vars
  31:9   warning  'router' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/cross-analysis/page.tsx
  25:20  warning  'setAnalyses' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/edit/page.tsx
  15:12  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/edit/page.tsx:15:12
  13 |   try {
  14 |     const report = await getCustomReport(id)
> 15 |     return <ReportBuilder report={report} mode="edit" />
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  16 |   } catch (error) {
  17 |     notFound()
  18 |   }  react-hooks/error-boundaries
  16:12  warning  'error' is defined but never usedtypescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx
   53:7   error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:53:7
   51 |
   52 |     return (
>  53 |       <div className="space-y-6">
      |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  54 |         <Card>
      | ^^^^^^^^^^^^^^
>  55 |           <CardHeader>
      …
      | ^^^^^^^^^^^^^^
> 144 |         </Tabs>
      | ^^^^^^^^^^^^^^
> 145 |       </div>
      | ^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  146 |     )
  147 |   } catch (error) {
  148 |     notFoundreact-hooks/error-boundaries
   54:9   error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:54:9
   52 |     return (
   53 |       <div className="space-y-6">
>  54 |         <Card>
      |         ^^^^^^
>  55 |           <CardHeader>
      | ^^^^^^^^^^^^^^^^^^^^^^
>  56 |             <div className="flex items-start justify-between">
      …
      | ^^^^^^^^^^^^^^^^^^^^^^
> 130 |           </CardContent>
      | ^^^^^^^^^^^^^^^^^^^^^^
> 131 |         </Card>
      | ^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  132 |
  133 |         <Tabs defaultValue="preview" className="w-full">
  134 |           <TabsListreact-hooks/error-boundaries
   55:11  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:55:11
  53 |       <div className="space-y-6">
  54 |         <Card>
> 55 |           <CardHeader>
     |           ^^^^^^^^^^^^
> 56 |             <div className="flex items-start justify-between">
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 57 |               <div className="flex-1">
     …
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 88 |             </div>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 89 |           </CardHeader>
     | ^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  90 |           <CardContent>
  91 |             <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
  92 |               <div>                                                                                                                                                                                                                                                                                                                                                                                                               react-hooks/error-boundaries
   56:13  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:56:13
  54 |         <Card>
  55 |           <CardHeader>
> 56 |             <div className="flex items-start justify-between">
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 57 |               <div className="flex-1">
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 58 |                 <div className="flex items-center gap-2 mb-2">
     …
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 87 |               </div>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 88 |             </div>
     | ^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  89 |           </CardHeader>
  90 |           <CardContent>
  91 |             <div className="grid grid-cols-1 md:grid-cols-3 gap-6">                                                                                                                                                                                                                                                                                                                                                                                                                      react-hooks/error-boundaries
   57:15  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:57:15
  55 |           <CardHeader>
  56 |             <div className="flex items-start justify-between">
> 57 |               <div className="flex-1">
     |               ^^^^^^^^^^^^^^^^^^^^^^^^
> 58 |                 <div className="flex items-center gap-2 mb-2">
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 59 |                   <CardTitle className="text-2xl">{report.name}</CardTitle>
     …
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 67 |                 )}
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 68 |               </div>
     | ^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  69 |               <div className="flex gap-2">
  70 |                 <form
  71 |                   action={async () => {                                                                                                                                                                                                                                                                                                                  react-hooks/error-boundaries
   58:17  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:58:17
  56 |             <div className="flex items-start justify-between">
  57 |               <div className="flex-1">
> 58 |                 <div className="flex items-center gap-2 mb-2">
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 59 |                   <CardTitle className="text-2xl">{report.name}</CardTitle>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 60 |                   {getStatusBadge(report.status)}
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 61 |                   <Badge variant="outline">{getFormatLabel(report.format)}</Badge>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 62 |                 </div>
     | ^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  63 |                 {report.description && (
  64 |                   <CardDescription className="text-base">
  65 |                     {report.description}                                                                                                                        react-hooks/error-boundaries
   59:19  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:59:19
  57 |               <div className="flex-1">
  58 |                 <div className="flex items-center gap-2 mb-2">
> 59 |                   <CardTitle className="text-2xl">{report.name}</CardTitle>
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  60 |                   {getStatusBadge(report.status)}
  61 |                   <Badge variant="outline">{getFormatLabel(report.format)}</Badge>
  62 |                 </divreact-hooks/error-boundaries
   61:19  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:61:19
  59 |                   <CardTitle className="text-2xl">{report.name}</CardTitle>
  60 |                   {getStatusBadge(report.status)}
> 61 |                   <Badge variant="outline">{getFormatLabel(report.format)}</Badge>
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  62 |                 </div>
  63 |                 {report.description && (
  64 |                   <CardDescription className="text-basereact-hooks/error-boundaries
   64:19  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:64:19
  62 |                 </div>
  63 |                 {report.description && (
> 64 |                   <CardDescription className="text-base">
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 65 |                     {report.description}
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 66 |                   </CardDescription>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  67 |                 )}
  68 |               </div>
  69 |               <div className="flex gapreact-hooks/error-boundaries
   69:15  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:69:15
  67 |                 )}
  68 |               </div>
> 69 |               <div className="flex gap-2">
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 70 |                 <form
     | ^^^^^^^^^^^^^^^^^^^^^
> 71 |                   action={async () => {
     …
     | ^^^^^^^^^^^^^^^^^^^^^
> 86 |                 </Button>
     | ^^^^^^^^^^^^^^^^^^^^^
> 87 |               </div>
     | ^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  88 |             </div>
  89 |           </CardHeader>
  90 |           <CardContentreact-hooks/error-boundaries
   70:17  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:70:17
  68 |               </div>
  69 |               <div className="flex gap-2">
> 70 |                 <form
     |                 ^^^^^
> 71 |                   action={async () => {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 72 |                     'use server'
     …
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 79 |                   </Button>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 80 |                 </form>
     | ^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  81 |                 <Button size="sm" variant="outline" asChild>
  82 |                   <Link href={`/dashboard/analytics/reports/${id}/edit`}>
  83 |                     <PencilIcon className="size-4" />                                                                                                                                                                                                                                                                                                                                                                                                              react-hooks/error-boundaries
   76:19  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:76:19
  74 |                   }}
  75 |                 >
> 76 |                   <Button size="sm" type="submit">
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 77 |                     <PlayIcon className="size-4" />
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 78 |                     生成実行
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 79 |                   </Button>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  80 |                 </form>
  81 |                 <Button size="sm" variant="outline" asChild>
  82 |                   <Link href={`/dashboard/analytics/reports/${id}/edit`}>                                                                                                                                                                                                                                                                                                                                                                                                                                                                react-hooks/error-boundaries
   77:21  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:77:21
  75 |                 >
  76 |                   <Button size="sm" type="submit">
> 77 |                     <PlayIcon className="size-4" />
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  78 |                     生成実行
  79 |                   </Button>
  80 |                 </formreact-hooks/error-boundaries
   81:17  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:81:17
  79 |                   </Button>
  80 |                 </form>
> 81 |                 <Button size="sm" variant="outline" asChild>
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 82 |                   <Link href={`/dashboard/analytics/reports/${id}/edit`}>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 83 |                     <PencilIcon className="size-4" />
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 84 |                     編集
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 85 |                   </Link>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 86 |                 </Button>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  87 |               </div>
  88 |             </div>
  89 |           </CardHeader>                                                                                                                                                                                                  react-hooks/error-boundaries
   82:19  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:82:19
  80 |                 </form>
  81 |                 <Button size="sm" variant="outline" asChild>
> 82 |                   <Link href={`/dashboard/analytics/reports/${id}/edit`}>
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 83 |                     <PencilIcon className="size-4" />
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 84 |                     編集
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 85 |                   </Link>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  86 |                 </Button>
  87 |               </div>
  88 |             </div>                                                                                                                                                                                                                                                                                                                                                                                                                                                                 react-hooks/error-boundaries
   83:21  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:83:21
  81 |                 <Button size="sm" variant="outline" asChild>
  82 |                   <Link href={`/dashboard/analytics/reports/${id}/edit`}>
> 83 |                     <PencilIcon className="size-4" />
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  84 |                     編集
  85 |                   </Link>
  86 |                 </Buttonreact-hooks/error-boundaries
   90:11  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:90:11
   88 |             </div>
   89 |           </CardHeader>
>  90 |           <CardContent>
      |           ^^^^^^^^^^^^^
>  91 |             <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  92 |               <div>
      …
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 129 |             </div>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 130 |           </CardContent>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  131 |         </Card>
  132 |
  133 |         <Tabs defaultValue="preview" className="w-full">                                                                                                                                                                                                                                                                                                                                                                                                                                       react-hooks/error-boundaries
   91:13  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:91:13
   89 |           </CardHeader>
   90 |           <CardContent>
>  91 |             <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  92 |               <div>
      | ^^^^^^^^^^^^^^^^^^^
>  93 |                 <p className="text-sm text-muted-foreground mb-2">最終生成</p>
      …
      | ^^^^^^^^^^^^^^^^^^^
> 128 |               )}
      | ^^^^^^^^^^^^^^^^^^^
> 129 |             </div>
      | ^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  130 |           </CardContent>
  131 |         </Card>
  132 |react-hooks/error-boundaries
   92:15  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:92:15
   90 |           <CardContent>
   91 |             <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
>  92 |               <div>
      |               ^^^^^
>  93 |                 <p className="text-sm text-muted-foreground mb-2">最終生成</p>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  94 |                 <div className="flex items-center gap-2">
      …
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 104 |                 </div>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 105 |               </div>
      | ^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  106 |               <div>
  107 |                 <p className="text-sm text-muted-foreground mb-2">次回実行予定</p>
  108 |                 <div className="flex items-center gap-2">                                                                                                                                                                                                                                              react-hooks/error-boundaries
   93:17  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:93:17
  91 |             <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
  92 |               <div>
> 93 |                 <p className="text-sm text-muted-foreground mb-2">最終生成</p>
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  94 |                 <div className="flex items-center gap-2">
  95 |                   <ClockIcon className="size-5 text-muted-foreground" />
  96 |                   <spanreact-hooks/error-boundaries
   94:17  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:94:17
   92 |               <div>
   93 |                 <p className="text-sm text-muted-foreground mb-2">最終生成</p>
>  94 |                 <div className="flex items-center gap-2">
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  95 |                   <ClockIcon className="size-5 text-muted-foreground" />
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  96 |                   <span>
      …
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 103 |                   </span>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 104 |                 </div>
      | ^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  105 |               </div>
  106 |               <div>
  107 |                 <p className="text-sm text-muted-foreground mb-2">次回実行予定</p>                                                                                                                                                                                                                                      react-hooks/error-boundaries
   95:19  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:95:19
  93 |                 <p className="text-sm text-muted-foreground mb-2">最終生成</p>
  94 |                 <div className="flex items-center gap-2">
> 95 |                   <ClockIcon className="size-5 text-muted-foreground" />
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  96 |                   <span>
  97 |                     {report.lastGenerated
  98 |                       ? formatDistanceToNow(new Date(report.lastGenerated), {react-hooks/error-boundaries
   96:19  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:96:19
   94 |                 <div className="flex items-center gap-2">
   95 |                   <ClockIcon className="size-5 text-muted-foreground" />
>  96 |                   <span>
      |                   ^^^^^^
>  97 |                     {report.lastGenerated
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  98 |                       ? formatDistanceToNow(new Date(report.lastGenerated), {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  99 |                           addSuffix: true,
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 100 |                           locale: ja,
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 101 |                         })
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 102 |                       : '未生成'}
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 103 |                   </span>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  104 |                 </div>
  105 |               </div>
  106 |               <div>                                                                                                    react-hooks/error-boundaries
  106:15  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:106:15
  104 |                 </div>
  105 |               </div>
> 106 |               <div>
      |               ^^^^^
> 107 |                 <p className="text-sm text-muted-foreground mb-2">次回実行予定</p>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 108 |                 <div className="flex items-center gap-2">
      …
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 118 |                 </div>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 119 |               </div>
      | ^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  120 |               {report.schedule && (
  121 |                 <div>
  122 |                   <p className="text-sm text-muted-foreground mb-2">メール送信先</p>                                                                                                                                                                                                                                                                                                       react-hooks/error-boundaries
  107:17  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:107:17
  105 |               </div>
  106 |               <div>
> 107 |                 <p className="text-sm text-muted-foreground mb-2">次回実行予定</p>
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  108 |                 <div className="flex items-center gap-2">
  109 |                   <ClockIcon className="size-5 text-muted-foreground" />
  110 |                   <spanreact-hooks/error-boundaries
  108:17  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:108:17
  106 |               <div>
  107 |                 <p className="text-sm text-muted-foreground mb-2">次回実行予定</p>
> 108 |                 <div className="flex items-center gap-2">
      |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 109 |                   <ClockIcon className="size-5 text-muted-foreground" />
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 110 |                   <span>
      …
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 117 |                   </span>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 118 |                 </div>
      | ^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  119 |               </div>
  120 |               {report.schedule && (
  121 |                 <div>                                                                                                                                                                                                                                                                          react-hooks/error-boundaries
  109:19  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:109:19
  107 |                 <p className="text-sm text-muted-foreground mb-2">次回実行予定</p>
  108 |                 <div className="flex items-center gap-2">
> 109 |                   <ClockIcon className="size-5 text-muted-foreground" />
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  110 |                   <span>
  111 |                     {report.nextScheduled
  112 |                       ? formatDistanceToNow(new Date(report.nextScheduled), {react-hooks/error-boundaries
  110:19  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:110:19
  108 |                 <div className="flex items-center gap-2">
  109 |                   <ClockIcon className="size-5 text-muted-foreground" />
> 110 |                   <span>
      |                   ^^^^^^
> 111 |                     {report.nextScheduled
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 112 |                       ? formatDistanceToNow(new Date(report.nextScheduled), {
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 113 |                           addSuffix: true,
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 114 |                           locale: ja,
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 115 |                         })
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 116 |                       : 'スケジュールなし'}
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 117 |                   </span>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  118 |                 </div>
  119 |               </div>
  120 |               {report.schedule && (                                                                              react-hooks/error-boundaries
  121:17  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:121:17
  119 |               </div>
  120 |               {report.schedule && (
> 121 |                 <div>
      |                 ^^^^^
> 122 |                   <p className="text-sm text-muted-foreground mb-2">メール送信先</p>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 123 |                   <div className="flex items-center gap-2">
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 124 |                     <EnvelopeIcon className="size-5 text-muted-foreground" />
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 125 |                     <span>{report.schedule.emailRecipients.length} 件</span>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 126 |                   </div>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 127 |                 </div>
      | ^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  128 |               )}
  129 |             </div>
  130 |           </CardContent>  react-hooks/error-boundaries
  122:19  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:122:19
  120 |               {report.schedule && (
  121 |                 <div>
> 122 |                   <p className="text-sm text-muted-foreground mb-2">メール送信先</p>
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  123 |                   <div className="flex items-center gap-2">
  124 |                     <EnvelopeIcon className="size-5 text-muted-foreground" />
  125 |                     <span>{report.schedule.emailRecipients.length} 件</span>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              react-hooks/error-boundaries
  123:19  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:123:19
  121 |                 <div>
  122 |                   <p className="text-sm text-muted-foreground mb-2">メール送信先</p>
> 123 |                   <div className="flex items-center gap-2">
      |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 124 |                     <EnvelopeIcon className="size-5 text-muted-foreground" />
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 125 |                     <span>{report.schedule.emailRecipients.length} 件</span>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 126 |                   </div>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  127 |                 </div>
  128 |               )}
  129 |             </div>                                                                                                                                                                                                                                                                                                                                           react-hooks/error-boundaries
  124:21  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:124:21
  122 |                   <p className="text-sm text-muted-foreground mb-2">メール送信先</p>
  123 |                   <div className="flex items-center gap-2">
> 124 |                     <EnvelopeIcon className="size-5 text-muted-foreground" />
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  125 |                     <span>{report.schedule.emailRecipients.length} 件</span>
  126 |                   </div>
  127 |                 </divreact-hooks/error-boundaries
  125:21  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:125:21
  123 |                   <div className="flex items-center gap-2">
  124 |                     <EnvelopeIcon className="size-5 text-muted-foreground" />
> 125 |                     <span>{report.schedule.emailRecipients.length} 件</span>
      |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  126 |                   </div>
  127 |                 </div>
  128 |               )}react-hooks/error-boundaries
  133:9   error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:133:9
  131 |         </Card>
  132 |
> 133 |         <Tabs defaultValue="preview" className="w-full">
      |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 134 |           <TabsList>
      | ^^^^^^^^^^^^^^^^^^^^
> 135 |             <TabsTrigger value="preview">プレビュー</TabsTrigger>
      …
      | ^^^^^^^^^^^^^^^^^^^^
> 143 |           </TabsContent>
      | ^^^^^^^^^^^^^^^^^^^^
> 144 |         </Tabs>
      | ^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  145 |       </div>
  146 |     )
  147 |   } catch (error) {react-hooks/error-boundaries
  134:11  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:134:11
  132 |
  133 |         <Tabs defaultValue="preview" className="w-full">
> 134 |           <TabsList>
      |           ^^^^^^^^^^
> 135 |             <TabsTrigger value="preview">プレビュー</TabsTrigger>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 136 |             <TabsTrigger value="history">履歴</TabsTrigger>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 137 |           </TabsList>
      | ^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  138 |           <TabsContent value="preview" className="mt-6">
  139 |             <ReportPreview report={report} />
  140 |           </TabsContent>                                                                                                                                                                                                                                                                                                                                                                                                                                                                           react-hooks/error-boundaries
  135:13  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:135:13
  133 |         <Tabs defaultValue="preview" className="w-full">
  134 |           <TabsList>
> 135 |             <TabsTrigger value="preview">プレビュー</TabsTrigger>
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  136 |             <TabsTrigger value="history">履歴</TabsTrigger>
  137 |           </TabsList>
  138 |           <TabsContent value="preview" className="mtreact-hooks/error-boundaries
  136:13  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:136:13
  134 |           <TabsList>
  135 |             <TabsTrigger value="preview">プレビュー</TabsTrigger>
> 136 |             <TabsTrigger value="history">履歴</TabsTrigger>
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  137 |           </TabsList>
  138 |           <TabsContent value="preview" className="mt-6">
  139 |             <ReportPreview report={report}react-hooks/error-boundaries
  138:11  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:138:11
  136 |             <TabsTrigger value="history">履歴</TabsTrigger>
  137 |           </TabsList>
> 138 |           <TabsContent value="preview" className="mt-6">
      |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 139 |             <ReportPreview report={report} />
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 140 |           </TabsContent>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  141 |           <TabsContent value="history" className="mt-6">
  142 |             <ReportHistory history={history} reportId={id} />
  143 |           </TabsContentreact-hooks/error-boundaries
  139:13  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:139:13
  137 |           </TabsList>
  138 |           <TabsContent value="preview" className="mt-6">
> 139 |             <ReportPreview report={report} />
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  140 |           </TabsContent>
  141 |           <TabsContent value="history" className="mt-6">
  142 |             <ReportHistory history={history} reportId={id}react-hooks/error-boundaries
  141:11  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:141:11
  139 |             <ReportPreview report={report} />
  140 |           </TabsContent>
> 141 |           <TabsContent value="history" className="mt-6">
      |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 142 |             <ReportHistory history={history} reportId={id} />
      | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 143 |           </TabsContent>
      | ^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  144 |         </Tabs>
  145 |       </div>
  146 |react-hooks/error-boundaries
  142:13  error    Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/reports/[id]/page.tsx:142:13
  140 |           </TabsContent>
  141 |           <TabsContent value="history" className="mt-6">
> 142 |             <ReportHistory history={history} reportId={id} />
      |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  143 |           </TabsContent>
  144 |         </Tabs>
  145 |       </divreact-hooks/error-boundaries
  147:12  warning  'error' is defined but never usedtypescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/url-analysis/page.tsx
   8:3   warning  'ChevronDownIcon' is defined but never used       @typescript-eslint/no-unused-vars
  22:20  warning  'setAnalyses' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/url-tracking/[id]/page.tsx
   4:29  warning  'CardDescription' is defined but never used  @typescript-eslint/no-unused-vars
  17:12  error    Unexpected any. Specify a different type     @typescript-eslint/no-explicit-any
  18:18  error    Unexpected any. Specify a different type     @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/analytics/url-tracking/page.tsx
   2:10  warning  'PlusIcon' is defined but never used      @typescript-eslint/no-unused-vars
   3:10  warning  'Button' is defined but never used        @typescript-eslint/no-unused-vars
  10:13  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/auto-response/analytics/page.tsx
   79:89  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  138:91  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/auto-response/new/page.tsx
  18:7  error  Error: Calling setState synchronously within an effect can trigger cascading renders

Effects are intended to synchronize state between React and external systems such as manually updating the DOM, state management libraries, or other platform APIs. In general, the body of an effect should do one or both of the following:
* Update external systems with the latest state from React.
* Subscribe for updates from some external system, calling setState in a callback function when external state changes.

Calling setState synchronously within an effect body causes cascading renders that can hurt performance, and is not recommended. (https://react.dev/learn/you-might-not-need-an-effect).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/auto-response/new/page.tsx:18:7
  16 |   useEffect(() => {
  17 |     if (!type) {
> 18 |       setShowTypeSelector(true)
     |       ^^^^^^^^^^^^^^^^^^^ Avoid calling setState() directly within an effect
  19 |     }
  20 |   }, [type])
  21 |  react-hooks/set-state-in-effect

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/auto-response/page.tsx
  20:32  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  21:36  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/auto-response/scenario/[id]/edit/page.tsx
   33:6   warning  React Hook useEffect has a missing dependency: 'loadScenario'. Either include it or remove the dependency array  react-hooks/exhaustive-deps
  101:28  error    Unexpected any. Specify a different type                                                                         @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/auto-response/scenario/new/page.tsx
  46:28  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/chat/[friendId]/page.tsx
  24:7   error  Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/chat/[friendId]/page.tsx:24:7
  22 |
  23 |     return (
> 24 |       <div className="flex-1">
     |       ^^^^^^^^^^^^^^^^^^^^^^^^
> 25 |         <ChatLayout conversations={conversations}>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 26 |           <div className="flex-1">
     …
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 35 |         </ChatLayout>
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 36 |       </div>
     | ^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  37 |     )
  38 |   } catch (error) {
  39 |     console.error('Error loading chat:', error)                                                                                                                                                                                                                              react-hooks/error-boundaries
  25:9   error  Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/chat/[friendId]/page.tsx:25:9
  23 |     return (
  24 |       <div className="flex-1">
> 25 |         <ChatLayout conversations={conversations}>
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 26 |           <div className="flex-1">
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 27 |             <ChatArea
     …
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 34 |           <FriendDetailSidebar friend={friend} />
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 35 |         </ChatLayout>
     | ^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  36 |       </div>
  37 |     )
  38 |   } catch (error) {                                                                                                                                                                                                                         react-hooks/error-boundaries
  26:11  error  Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/chat/[friendId]/page.tsx:26:11
  24 |       <div className="flex-1">
  25 |         <ChatLayout conversations={conversations}>
> 26 |           <div className="flex-1">
     |           ^^^^^^^^^^^^^^^^^^^^^^^^
> 27 |             <ChatArea
     | ^^^^^^^^^^^^^^^^^^^^^
> 28 |               friendId={friendId}
     | ^^^^^^^^^^^^^^^^^^^^^
> 29 |               friendName={friend.display_name || '名前なし'}
     | ^^^^^^^^^^^^^^^^^^^^^
> 30 |               friendAvatar={friend.picture_url}
     | ^^^^^^^^^^^^^^^^^^^^^
> 31 |               initialMessages={messages}
     | ^^^^^^^^^^^^^^^^^^^^^
> 32 |             />
     | ^^^^^^^^^^^^^^^^^^^^^
> 33 |           </div>
     | ^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  34 |           <FriendDetailSidebar friend={friend} />
  35 |         </ChatLayout>
  36 |       </div>  react-hooks/error-boundaries
  27:13  error  Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/chat/[friendId]/page.tsx:27:13
  25 |         <ChatLayout conversations={conversations}>
  26 |           <div className="flex-1">
> 27 |             <ChatArea
     |             ^^^^^^^^^
> 28 |               friendId={friendId}
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 29 |               friendName={friend.display_name || '名前なし'}
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 30 |               friendAvatar={friend.picture_url}
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 31 |               initialMessages={messages}
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 32 |             />
     | ^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  33 |           </div>
  34 |           <FriendDetailSidebar friend={friend} />
  35 |         </ChatLayout>                                                                                     react-hooks/error-boundaries
  34:11  error  Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/chat/[friendId]/page.tsx:34:11
  32 |             />
  33 |           </div>
> 34 |           <FriendDetailSidebar friend={friend} />
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  35 |         </ChatLayout>
  36 |       </div>
  37 |react-hooks/error-boundaries

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/chat/settings/page.tsx
  34:28  warning  'setResponseStatuses' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/customer-support/chat-management/page.tsx
  29:10  warning  'dateRange' is assigned a value but never used     @typescript-eslint/no-unused-vars
  29:21  warning  'setDateRange' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/customer-support/greeting/page.tsx
  29:19  warning  'setActions' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/data-management/action-schedule/new/page.tsx
  12:23  warning  'setTargetCount' is assigned a value but never used      @typescript-eslint/no-unused-vars
  13:10  warning  'targetCondition' is assigned a value but never used     @typescript-eslint/no-unused-vars
  13:27  warning  'setTargetCondition' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/data-management/action-schedule/page.tsx
   9:3   warning  'FolderIcon' is defined but never used               @typescript-eslint/no-unused-vars
  33:23  warning  'setShowFolders' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/data-management/friend-info/page.tsx
   8:3   warning  'FolderIcon' is defined but never used               @typescript-eslint/no-unused-vars
  30:23  warning  'setShowFolders' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/data-management/qr-actions/[id]/page.tsx
  13:9  warning  'params' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/forms/FormsPageClient.tsx
  19:10  warning  'isPending' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/forms/[id]/analytics/page.tsx
  64:7  error  Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/forms/[id]/analytics/page.tsx:64:7
  62 |
  63 |     return (
> 64 |       <AnalyticsDashboard
     |       ^^^^^^^^^^^^^^^^^^^
> 65 |         formId={formId}
     | ^^^^^^^^^^^^^^^^^^^^^^^
> 66 |         analytics={analytics}
     | ^^^^^^^^^^^^^^^^^^^^^^^
> 67 |         wordCloudData={wordCloudData}
     | ^^^^^^^^^^^^^^^^^^^^^^^
> 68 |       />
     | ^^^^^^^^^ Avoid constructing JSX within try/catch
  69 |     )
  70 |   } catch (error) {
  71 |     console.error('Failed to load analytics:', error)  react-hooks/error-boundaries

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/forms/[id]/edit/page.tsx
  23:6  warning  React Hook useEffect has a missing dependency: 'loadForm'. Either include it or remove the dependency array  react-hooks/exhaustive-deps

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/forms/[id]/preview/page.tsx
  24:6  warning  React Hook useEffect has a missing dependency: 'loadForm'. Either include it or remove the dependency array  react-hooks/exhaustive-deps

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/forms/[id]/responses/[responseId]/page.tsx
  28:44  error    Unexpected any. Specify a different type                                                                         @typescript-eslint/no-explicit-any
  35:6   warning  React Hook useEffect has a missing dependency: 'loadResponse'. Either include it or remove the dependency array  react-hooks/exhaustive-deps

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/forms/[id]/responses/page.tsx
   5:8  warning  'Link' is defined but never used                                                                             @typescript-eslint/no-unused-vars
  36:6  warning  React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array  react-hooks/exhaustive-deps

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/friends/[id]/page.tsx
  48:22  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  48:49  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  58:19  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  59:18  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  65:50  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  66:55  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  67:48  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/friends/page.tsx
  5:29  warning  'CardDescription' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/friends/segments/page.tsx
  2:22  warning  'PlusIcon' is defined but never used  @typescript-eslint/no-unused-vars
  5:10  warning  'Button' is defined but never used    @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/friends/tags/page.tsx
  346:20  warning  'updatedTag' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/messages/page.tsx
  22:12  error  Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/messages/page.tsx:22:12
  20 |   try {
  21 |     const messages = await getMessages()
> 22 |     return <MessageList initialMessages={messages} />
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  23 |   } catch (error) {
  24 |     console.error('Failed to load messages:', error)
  25 |     return (  react-hooks/error-boundaries

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/messages/step-campaigns/[id]/page.tsx
  28:9   warning  'params' is assigned a value but never used    @typescript-eslint/no-unused-vars
  34:17  warning  'setSteps' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/messages/step-campaigns/page.tsx
  12:3  warning  'PlayIcon' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/messages/templates/[id]/page.tsx
  22:9  warning  'router' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/messages/templates/new/page.tsx
  22:9  warning  'router' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/page.tsx
  138:15  error  Do not use an `<a>` element to navigate to `/dashboard/friends/`. Use `<Link />` from `next/link` instead. See: https://nextjs.org/docs/messages/no-html-link-for-pages  @next/next/no-html-link-for-pages

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/reservations/lessons/[id]/page.tsx
   57:24  warning  'setSelectedDate' is assigned a value but never used                                                                                                                                                                                                                                     @typescript-eslint/no-unused-vars
  229:37  warning  'index' is defined but never used                                                                                                                                                                                                                                                        @typescript-eslint/no-unused-vars
  241:23  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/reservations/lessons/page.tsx
  18:24  warning  'setReservations' is assigned a value but never used                                                                                                                                                                                                                                     @typescript-eslint/no-unused-vars
  98:19  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/reservations/page.tsx
  25:10  warning  'page' is assigned a value but never used                                                                            @typescript-eslint/no-unused-vars
  45:6   warning  React Hook useEffect has a missing dependency: 'loadReservations'. Either include it or remove the dependency array  react-hooks/exhaustive-deps

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/reservations/salon/page.tsx
  18:24  warning  'setReservations' is assigned a value but never used                                                                                                                                                                                                                                     @typescript-eslint/no-unused-vars
  98:19  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/reservations/types/page.tsx
   74:21  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  106:41  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/rich-menus/page.tsx
  28:12  error  Error: Avoid constructing JSX within try/catch

React does not immediately render components when JSX is rendered, so any errors from this component will not be caught by the try/catch. To catch errors in rendering a given component, wrap that component in an error boundary. (https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/rich-menus/page.tsx:28:12
  26 |   try {
  27 |     const richMenus = await getRichMenus()
> 28 |     return <RichMenuList initialMenus={richMenus} />
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Avoid constructing JSX within try/catch
  29 |   } catch (error) {
  30 |     console.error('Failed to load rich menus:', error)
  31 |     return <RichMenuError />  react-hooks/error-boundaries

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/settings/billing/page.tsx
  149:14  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
  170:14  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
  187:14  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/settings/line/page.tsx
   18:8   warning  'LineChannel' is defined but never used                                                                                                                                                                                                                                                  @typescript-eslint/no-unused-vars
  247:19  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/settings/organization/client.tsx
   48:10  warning  'isLoading' is assigned a value but never used  @typescript-eslint/no-unused-vars
   53:49  error    Unexpected any. Specify a different type        @typescript-eslint/no-explicit-any
   72:14  warning  'error' is defined but never used               @typescript-eslint/no-unused-vars
  103:14  warning  'error' is defined but never used               @typescript-eslint/no-unused-vars
  134:14  warning  'error' is defined but never used               @typescript-eslint/no-unused-vars
  157:14  warning  'error' is defined but never used               @typescript-eslint/no-unused-vars
  182:14  warning  'error' is defined but never used               @typescript-eslint/no-unused-vars
  209:14  warning  'error' is defined but never used               @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/settings/organization/page.tsx
  72:37  warning  'invitationsError' is assigned a value but never used  @typescript-eslint/no-unused-vars
  78:59  error    Unexpected any. Specify a different type               @typescript-eslint/no-explicit-any
  87:63  error    Unexpected any. Specify a different type               @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/app/dashboard/settings/profile/page.tsx
  108:64  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/DateRangePicker.tsx
  3:10  warning  'useState' is defined but never used  @typescript-eslint/no-unused-vars
  4:10  warning  'Button' is defined but never used    @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/DeviceBreakdown.tsx
  4:52  warning  'Legend' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/HeatmapChart.tsx
  14:38  warning  'xAxisLabel' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/MetricSelector.tsx
  5:29  warning  'CardDescription' is defined but never used  @typescript-eslint/no-unused-vars
  5:46  warning  'CardHeader' is defined but never used       @typescript-eslint/no-unused-vars
  5:58  warning  'CardTitle' is defined but never used        @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/QRCodeGenerator.tsx
  22:5   error    Error: Cannot access variable before it is declared

`generateQRCode` is accessed before it is declared, which prevents the earlier access from updating when this value changes over time.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/QRCodeGenerator.tsx:22:5
  20 |
  21 |   useEffect(() => {
> 22 |     generateQRCode()
     |     ^^^^^^^^^^^^^^ `generateQRCode` accessed before it is declared
  23 |   }, [url, size, margin])
  24 |
  25 |   const generateQRCode = () => {

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/QRCodeGenerator.tsx:25:3
  23 |   }, [url, size, margin])
  24 |
> 25 |   const generateQRCode = () => {
     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 26 |     if (canvasRef.current) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 27 |       QRCode.toCanvas(canvasRef.current, url, {
     …
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 36 |     }
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 37 |   }
     | ^^^^ `generateQRCode` is declared here
  38 |
  39 |   const handleDownloadPNG = () => {
  40 |     if (!canvasRef.current) return  react-hooks/immutability
  23:6   warning  React Hook useEffect has a missing dependency: 'generateQRCode'. Either include it or remove the dependency arrayreact-hooks/exhaustive-deps
  72:14  warning  'error' is defined but never usedtypescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportBuilder.tsx
  147:74  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx
  120:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:120:14
  118 |           <h3 className="text-lg font-semibold mb-4">友だち統計</h3>
  119 |           <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
> 120 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  121 |               icon={UserGroupIcon}
  122 |               title="総友だち数"
  123 |               value={mockData.friends.total.toLocaleString()}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">            react-hooks/static-components
  126:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:126:14
  124 |               trend={mockData.friends.trend}
  125 |             />
> 126 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  127 |               icon={UserGroupIcon}
  128 |               title="新規友だち"
  129 |               value={mockData.friends.added}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">                                                                                                   react-hooks/static-components
  132:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:132:14
  130 |               subtitle="期間内の追加"
  131 |             />
> 132 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  133 |               icon={UserGroupIcon}
  134 |               title="ブロック数"
  135 |               value={mockData.friends.blocked}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">                                                                                                              react-hooks/static-components
  146:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:146:14
  144 |           <h3 className="text-lg font-semibold mb-4">メッセージ統計</h3>
  145 |           <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
> 146 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  147 |               icon={ChatBubbleLeftRightIcon}
  148 |               title="送信数"
  149 |               value={mockData.messages.sent.toLocaleString()}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">  react-hooks/static-components
  152:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:152:14
  150 |               trend={mockData.messages.trend}
  151 |             />
> 152 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  153 |               icon={ChatBubbleLeftRightIcon}
  154 |               title="開封率"
  155 |               value={`${mockData.messages.openRate}%`}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">                                                                                react-hooks/static-components
  158:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:158:14
  156 |               subtitle={`${mockData.messages.opened}件開封`}
  157 |             />
> 158 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  159 |               icon={ChatBubbleLeftRightIcon}
  160 |               title="クリック率"
  161 |               value={`${mockData.messages.clickRate}%`}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">                                                                 react-hooks/static-components
  172:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:172:14
  170 |           <h3 className="text-lg font-semibold mb-4">予約統計</h3>
  171 |           <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
> 172 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  173 |               icon={CalendarDaysIcon}
  174 |               title="総予約数"
  175 |               value={mockData.reservations.total}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">                       react-hooks/static-components
  178:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:178:14
  176 |               trend={mockData.reservations.trend}
  177 |             />
> 178 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  179 |               icon={CalendarDaysIcon}
  180 |               title="完了予約"
  181 |               value={mockData.reservations.completed}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">                                                                                   react-hooks/static-components
  184:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:184:14
  182 |               subtitle={`完了率 ${mockData.reservations.completionRate}%`}
  183 |             />
> 184 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  185 |               icon={CalendarDaysIcon}
  186 |               title="キャンセル"
  187 |               value={mockData.reservations.cancelled}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">                                                            react-hooks/static-components
  198:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:198:14
  196 |           <h3 className="text-lg font-semibold mb-4">フォーム統計</h3>
  197 |           <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
> 198 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  199 |               icon={DocumentTextIcon}
  200 |               title="回答数"
  201 |               value={mockData.forms.responses}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">                         react-hooks/static-components
  204:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:204:14
  202 |               trend={mockData.forms.trend}
  203 |             />
> 204 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  205 |               icon={DocumentTextIcon}
  206 |               title="完了率"
  207 |               value={`${mockData.forms.completionRate}%`}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">                                                                                       react-hooks/static-components
  210:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:210:14
  208 |               subtitle={`${mockData.forms.completed}件完了`}
  209 |             />
> 210 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  211 |               icon={DocumentTextIcon}
  212 |               title="平均回答時間"
  213 |               value={mockData.forms.avgTime}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">                                                                                  react-hooks/static-components
  224:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:224:14
  222 |           <h3 className="text-lg font-semibold mb-4">URL計測</h3>
  223 |           <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
> 224 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  225 |               icon={LinkIcon}
  226 |               title="クリック数"
  227 |               value={mockData.urlTracking.clicks.toLocaleString()}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">            react-hooks/static-components
  230:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:230:14
  228 |               trend={mockData.urlTracking.trend}
  229 |             />
> 230 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  231 |               icon={LinkIcon}
  232 |               title="ユニーククリック"
  233 |               value={mockData.urlTracking.uniqueClicks.toLocaleString()}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">                                                                     react-hooks/static-components
  236:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:236:14
  234 |               subtitle="重複除外"
  235 |             />
> 236 |             <MetricCard
      |              ^^^^^^^^^^ This component is created during render
  237 |               icon={LinkIcon}
  238 |               title="コンバージョン率"
  239 |               value={`${mockData.urlTracking.conversionRate}%`}

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ReportPreview.tsx:59:22
   57 |   }
   58 |
>  59 |   const MetricCard = ({
      |                      ^^
>  60 |     icon: Icon,
      | ^^^^^^^^^^^^^^^
>  61 |     title,
      …
      | ^^^^^^^^^^^^^^^
> 102 |     </Card>
      | ^^^^^^^^^^^^^^^
> 103 |   )
      | ^^^^ The component is created during render here
  104 |
  105 |   return (
  106 |     <div className="space-y-6">                                                                                                 react-hooks/static-components

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ScatterChart.tsx
   35:24  warning  'avgX' is assigned a value but never usedtypescript-eslint/no-unused-vars
   35:30  warning  'avgY' is assigned a value but never usedtypescript-eslint/no-unused-vars
   56:47  error    Unexpected any. Specify a different typetypescript-eslint/no-explicit-any
  107:32  error    Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ScatterChart.tsx:107:32
  105 |             />
  106 |             <ZAxis type="number" dataKey="z" range={[50, 400]} />
> 107 |             <Tooltip content={<CustomTooltip />} />
      |                                ^^^^^^^^^^^^^ This component is created during render
  108 |             <Scatter
  109 |               data={scatterData}
  110 |               fill="#3B82F6"

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/ScatterChart.tsx:56:25
  54 |   }, [scatterData])
  55 |
> 56 |   const CustomTooltip = ({ active, payload }: any) => {
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 57 |     if (active && payload && payload.length) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 58 |       const data = payload[0].payload
     …
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 66 |     return null
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 67 |   }
     | ^^^^ The component is created during render here
  68 |
  69 |   return (
  70 |     <Card>  react-hooks/static-components

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/TopMessages.tsx
   9:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  23:37  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/URLList.tsx
  59:14  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/analytics/UrlStats.tsx
  55:3  warning  'clicksByHour' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/auto-response/AIResponseRules.tsx
  184:72  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/auto-response/AITester.tsx
  11:67  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  17:38  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/auto-response/ActionSelector.tsx
  50:68  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/auto-response/ConditionBuilder.tsx
   6:10  warning  'Switch' is defined but never used        @typescript-eslint/no-unused-vars
  26:36  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  39:60  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  49:62  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  59:61  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/auto-response/ContextSettings.tsx
  5:10  warning  'Input' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/auto-response/ConversationTimeline.tsx
    8:30  warning  'ConversationHistory' is defined but never used                                                                            @typescript-eslint/no-unused-vars
    8:51  warning  'ScenarioStep' is defined but never used                                                                                   @typescript-eslint/no-unused-vars
   27:6   warning  React Hook useEffect has a missing dependency: 'loadConversationDetail'. Either include it or remove the dependency array  react-hooks/exhaustive-deps
  270:22  error    'ClockIcon' is not defined                                                                                                 react/jsx-no-undef

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/auto-response/KeywordBuilder.tsx
  74:56  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/auto-response/KeywordTester.tsx
  43:20  warning  'e' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/auto-response/NodeEditorDialog.tsx
  224:3  warning  'onChange' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/auto-response/RuleStats.tsx
  4:62  warning  'ClockIcon' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/auto-response/RuleTypeSelector.tsx
  3:10  warning  'useState' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/auto-response/ScenarioFlowEditor.tsx
  29:3  warning  'PlusIcon' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/chat/ChatArea.tsx
  59:13  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/chat/ConversationList.tsx
  62:19  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/chat/FriendDetailSidebar.tsx
  17:36  error    Unexpected any. Specify a different type                                                                                                                                                                                                                                                 @typescript-eslint/no-explicit-any
  46:13  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/chat/MessageInput.tsx
  37:25  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/dashboard/DashboardHeader.tsx
  13:10  warning  'Badge' is defined but never used         @typescript-eslint/no-unused-vars
  19:9   error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/dashboard/DashboardSidebar.tsx
   7:3  warning  'HomeIcon' is defined but never used                   @typescript-eslint/no-unused-vars
  15:3  warning  'ShoppingCartIcon' is defined but never used           @typescript-eslint/no-unused-vars
  17:3  warning  'LinkIcon' is defined but never used                   @typescript-eslint/no-unused-vars
  19:3  warning  'DocumentDuplicateIcon' is defined but never used      @typescript-eslint/no-unused-vars
  20:3  warning  'ClipboardDocumentListIcon' is defined but never used  @typescript-eslint/no-unused-vars
  21:3  warning  'PresentationChartLineIcon' is defined but never used  @typescript-eslint/no-unused-vars
  22:3  warning  'TagIcon' is defined but never used                    @typescript-eslint/no-unused-vars
  23:3  warning  'UserPlusIcon' is defined but never used               @typescript-eslint/no-unused-vars
  24:3  warning  'ArrowPathIcon' is defined but never used              @typescript-eslint/no-unused-vars
  26:3  warning  'CpuChipIcon' is defined but never used                @typescript-eslint/no-unused-vars
  27:3  warning  'ChartPieIcon' is defined but never used               @typescript-eslint/no-unused-vars
  28:3  warning  'CurrencyDollarIcon' is defined but never used         @typescript-eslint/no-unused-vars
  29:3  warning  'BuildingOfficeIcon' is defined but never used         @typescript-eslint/no-unused-vars
  30:3  warning  'UserCircleIcon' is defined but never used             @typescript-eslint/no-unused-vars
  43:9  error    Unexpected any. Specify a different type               @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/AnalyticsDashboard.tsx
   3:10  warning  'useState' is defined but never used      @typescript-eslint/no-unused-vars
  34:32  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  47:38  warning  'formId' is defined but never used        @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/FieldAnalytics.tsx
    4:52  warning  'Legend' is defined but never used        @typescript-eslint/no-unused-vars
   10:15  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   41:93  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  108:93  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  171:91  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/FieldEditor.tsx
  23:21  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/FieldTypeSelector.tsx
  6:10  warning  'PlusIcon' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/FormCard.tsx
  3:64  warning  'QrCodeIcon' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/FormField.tsx
  28:10  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  29:21  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/FormList.tsx
  18:10  warning  'useState' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/PublicForm.tsx
  24:39  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  25:38  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  37:54  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/QRCodeDialog.tsx
  64:15  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/ResponseDetail.tsx
   10:29  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   22:18  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   40:35  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   40:48  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  132:54  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/ResponseList.tsx
  22:29  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/ResponseTable.tsx
  22:10  warning  'Badge' is defined but never used         @typescript-eslint/no-unused-vars
  55:53  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/ValidationEditor.tsx
   8:10  warning  'Switch' is defined but never used        @typescript-eslint/no-unused-vars
  54:84  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/forms/WordCloud.tsx
  67:26  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/ActionHistory.tsx
  14:28  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/ActionSelectionModal.tsx
  32:10  warning  'selectedType' is assigned a value but never usedtypescript-eslint/no-unused-vars
  32:24  warning  'setSelectedType' is assigned a value but never usedtypescript-eslint/no-unused-vars
  36:11  error    Error: Cannot call impure function during render

`Date.now` is an impure function. Calling an impure function can produce unstable results that update unpredictably when the component happens to re-render. (https://react.dev/reference/rules/components-and-hooks-must-be-pure#components-and-hooks-must-be-idempotent).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/ActionSelectionModal.tsx:36:11
  34 |   const handleSelect = (type: typeof actionTypes[0]) => {
  35 |     const action: TagAction = {
> 36 |       id: Date.now().toString(),
     |           ^^^^^^^^^^ Cannot call impure function
  37 |       type: type.id as TagAction['type'],
  38 |       name: type.name,
  39 |     }  react-hooks/purity

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/ConditionBuilder.tsx
   65:36  error    Unexpected any. Specify a different type                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               @typescript-eslint/no-explicit-any
   68:5   error    Error: Cannot access variable before it is declared

`loadTags` is accessed before it is declared, which prevents the earlier access from updating when this value changes over time.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/ConditionBuilder.tsx:68:5
  66 |
  67 |   useEffect(() => {
> 68 |     loadTags()
     |     ^^^^^^^^ `loadTags` accessed before it is declared
  69 |   }, [])
  70 |
  71 |   const loadTags = async () => {

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/ConditionBuilder.tsx:71:3
  69 |   }, [])
  70 |
> 71 |   const loadTags = async () => {
     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 72 |     const result = await getTags()
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 73 |     if (result.success) {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 74 |       setTags(result.data)
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 75 |     }
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 76 |   }
     | ^^^^ `loadTags` is declared here
  77 |
  78 |   const addCondition = () => {
  79 |     const newCondition: SegmentCondition = {  react-hooks/immutability
  237:27  warning  'fieldType' is assigned a value but never usedtypescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/CustomFieldsEditor.tsx
  16:30  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/DeleteSegmentDialog.tsx
  39:19  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/ImportPreview.tsx
  24:9  warning  'validRows' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/SearchBar.tsx
  15:5  error  Error: Calling setState synchronously within an effect can trigger cascading renders

Effects are intended to synchronize state between React and external systems such as manually updating the DOM, state management libraries, or other platform APIs. In general, the body of an effect should do one or both of the following:
* Update external systems with the latest state from React.
* Subscribe for updates from some external system, calling setState in a callback function when external state changes.

Calling setState synchronously within an effect body causes cascading renders that can hurt performance, and is not recommended. (https://react.dev/learn/you-might-not-need-an-effect).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/SearchBar.tsx:15:5
  13 |
  14 |   useEffect(() => {
> 15 |     setSearchValue(searchParams.get('search') || '')
     |     ^^^^^^^^^^^^^^ Avoid calling setState() directly within an effect
  16 |   }, [searchParams])
  17 |
  18 |   const handleSearch = useCallback((value: string) => {  react-hooks/set-state-in-effect

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/SegmentDialog.tsx
  31:44  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  58:35  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  70:19  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/SegmentList.tsx
   23:5   error  Error: Cannot access variable before it is declared

`loadSegments` is accessed before it is declared, which prevents the earlier access from updating when this value changes over time.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/SegmentList.tsx:23:5
  21 |
  22 |   useEffect(() => {
> 23 |     loadSegments()
     |     ^^^^^^^^^^^^ `loadSegments` accessed before it is declared
  24 |   }, [])
  25 |
  26 |   const loadSegments = async () => {

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/SegmentList.tsx:26:3
  24 |   }, [])
  25 |
> 26 |   const loadSegments = async () => {
     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 27 |     setLoading(true)
     | ^^^^^^^^^^^^^^^^^^^^
> 28 |     const result = await getSegments()
     | ^^^^^^^^^^^^^^^^^^^^
> 29 |     if (result.success) {
     | ^^^^^^^^^^^^^^^^^^^^
> 30 |       setSegments(result.data)
     | ^^^^^^^^^^^^^^^^^^^^
> 31 |     }
     | ^^^^^^^^^^^^^^^^^^^^
> 32 |     setLoading(false)
     | ^^^^^^^^^^^^^^^^^^^^
> 33 |   }
     | ^^^^ `loadSegments` is declared here
  34 |
  35 |   const handleCreateNew = () => {
  36 |     setSelectedSegment(null)  react-hooks/immutability
  135:43  error  Unexpected any. Specify a different typetypescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/SegmentPreview.tsx
  24:7  error    Error: Cannot access variable before it is declared

`loadPreview` is accessed before it is declared, which prevents the earlier access from updating when this value changes over time.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/SegmentPreview.tsx:24:7
  22 |
  23 |     const timer = setTimeout(() => {
> 24 |       loadPreview()
     |       ^^^^^^^^^^^ `loadPreview` accessed before it is declared
  25 |     }, 500) // Debounce 500ms
  26 |
  27 |     return () => clearTimeout(timer)

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/SegmentPreview.tsx:30:3
  28 |   }, [conditions])
  29 |
> 30 |   const loadPreview = async () => {
     |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 31 |     setLoading(true)
     | ^^^^^^^^^^^^^^^^^^^^
> 32 |     const result = await previewSegment(conditions)
     | ^^^^^^^^^^^^^^^^^^^^
> 33 |     if (result.success) {
     | ^^^^^^^^^^^^^^^^^^^^
> 34 |       setCount(result.data)
     | ^^^^^^^^^^^^^^^^^^^^
> 35 |     } else {
     | ^^^^^^^^^^^^^^^^^^^^
> 36 |       setCount(0)
     | ^^^^^^^^^^^^^^^^^^^^
> 37 |     }
     | ^^^^^^^^^^^^^^^^^^^^
> 38 |     setLoading(false)
     | ^^^^^^^^^^^^^^^^^^^^
> 39 |   }
     | ^^^^ `loadPreview` is declared here
  40 |
  41 |   return (
  42 |     <Card>  react-hooks/immutability
  28:6  warning  React Hook useEffect has a missing dependency: 'loadPreview'. Either include it or remove the dependency arrayreact-hooks/exhaustive-deps

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/friends/TagList.tsx
  31:16  warning  'setTags' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/CampaignEditor.tsx
  44:31  warning  'status' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/MessageCreationWizard.tsx
  57:52  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/MessageEditor.tsx
  124:19  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/MessagePreview.tsx
  53:25  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/MessagePreviewDialog.tsx
  152:21  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/MessageTable.tsx
  3:10  warning  'useState' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/StepBuilder.tsx
   5:29  warning  'CardHeader' is defined but never used     @typescript-eslint/no-unused-vars
   5:41  warning  'CardTitle' is defined but never used      @typescript-eslint/no-unused-vars
   6:10  warning  'Input' is defined but never used          @typescript-eslint/no-unused-vars
   7:10  warning  'Label' is defined but never used          @typescript-eslint/no-unused-vars
   8:10  warning  'Textarea' is defined but never used       @typescript-eslint/no-unused-vars
  10:3   warning  'Select' is defined but never used         @typescript-eslint/no-unused-vars
  11:3   warning  'SelectContent' is defined but never used  @typescript-eslint/no-unused-vars
  12:3   warning  'SelectItem' is defined but never used     @typescript-eslint/no-unused-vars
  13:3   warning  'SelectTrigger' is defined but never used  @typescript-eslint/no-unused-vars
  14:3   warning  'SelectValue' is defined but never used    @typescript-eslint/no-unused-vars
  18:3   warning  'TrashIcon' is defined but never used      @typescript-eslint/no-unused-vars
  19:3   warning  'ArrowUpIcon' is defined but never used    @typescript-eslint/no-unused-vars
  20:3   warning  'ArrowDownIcon' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/StepCard.tsx
  16:3  warning  'PencilIcon' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/TargetSelector.tsx
  25:36  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/TemplateDialog.tsx
   40:12  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  208:40  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  371:28  warning  'error' is defined but never used         @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/TemplateList.tsx
  22:12  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/TemplatePreviewDialog.tsx
   32:14  error    Unexpected any. Specify a different typetypescript-eslint/no-explicit-any
   59:56  error    Unexpected any. Specify a different typetypescript-eslint/no-explicit-any
   69:7   error    Error: Calling setState synchronously within an effect can trigger cascading renders

Effects are intended to synchronize state between React and external systems such as manually updating the DOM, state management libraries, or other platform APIs. In general, the body of an effect should do one or both of the following:
* Update external systems with the latest state from React.
* Subscribe for updates from some external system, calling setState in a callback function when external state changes.

Calling setState synchronously within an effect body causes cascading renders that can hurt performance, and is not recommended. (https://react.dev/learn/you-might-not-need-an-effect).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/TemplatePreviewDialog.tsx:69:7
  67 |         else defaultValues[variable] = `{${variable}}`
  68 |       })
> 69 |       setVariableValues(defaultValues)
     |       ^^^^^^^^^^^^^^^^^ Avoid calling setState() directly within an effect
  70 |     }
  71 |   }, [template])
  72 |  react-hooks/set-state-in-effect
   75:11  error    'content' is never reassigned. Use 'const' insteadprefer-const
   84:7   error    Error: Calling setState synchronously within an effect can trigger cascading renders

Effects are intended to synchronize state between React and external systems such as manually updating the DOM, state management libraries, or other platform APIs. In general, the body of an effect should do one or both of the following:
* Update external systems with the latest state from React.
* Subscribe for updates from some external system, calling setState in a callback function when external state changes.

Calling setState synchronously within an effect body causes cascading renders that can hurt performance, and is not recommended. (https://react.dev/learn/you-might-not-need-an-effect).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/TemplatePreviewDialog.tsx:84:7
  82 |       }
  83 |
> 84 |       setPreviewContent(JSON.parse(replacedContent))
     |       ^^^^^^^^^^^^^^^^^ Avoid calling setState() directly within an effect
  85 |     }
  86 |   }, [template, variableValues])
  87 |                            react-hooks/set-state-in-effect
  155:27  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-elementnext/next/no-img-element
  167:27  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-elementnext/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/TemplateSelector.tsx
  33:12  error  Unexpected any. Specify a different typetypescript-eslint/no-explicit-any
  85:7   error  Error: Calling setState synchronously within an effect can trigger cascading renders

Effects are intended to synchronize state between React and external systems such as manually updating the DOM, state management libraries, or other platform APIs. In general, the body of an effect should do one or both of the following:
* Update external systems with the latest state from React.
* Subscribe for updates from some external system, calling setState in a callback function when external state changes.

Calling setState synchronously within an effect body causes cascading renders that can hurt performance, and is not recommended. (https://react.dev/learn/you-might-not-need-an-effect).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/messages/TemplateSelector.tsx:85:7
  83 |         else defaultValues[variable] = ''
  84 |       })
> 85 |       setVariableValues(defaultValues)
     |       ^^^^^^^^^^^^^^^^^ Avoid calling setState() directly within an effect
  86 |     }
  87 |   }, [selectedTemplate])
  88 |  react-hooks/set-state-in-effect

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/BusinessHoursEditor.tsx
  8:10  warning  'Label' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/CalendarView.tsx
  6:39  warning  'TabsContent' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/DayView.tsx
  15:40  warning  'reservations' is defined but never usedtypescript-eslint/no-unused-vars
  28:20  error    Error: Cannot call impure function during render

`Math.random` is an impure function. Calling an impure function can produce unstable results that update unpredictably when the component happens to re-render. (https://react.dev/reference/rules/components-and-hooks-must-be-pure#components-and-hooks-must-be-idempotent).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/DayView.tsx:28:20
  26 |   const getReservationsForTime = (time: string): ReservationSlotData[] => {
  27 |     // In real implementation, filter reservations by time
> 28 |     const random = Math.random()
     |                    ^^^^^^^^^^^^^ Cannot call impure function
  29 |     if (random < 0.3) {
  30 |       return [{
  31 |         id: `${format(currentDate, 'yyyy-MM-dd')}-${time}`,  react-hooks/purity

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/MonthView.tsx
   3:10  warning  'useState' is defined but never used          @typescript-eslint/no-unused-vars
   5:10  warning  'ja' is defined but never used                @typescript-eslint/no-unused-vars
  40:11  warning  'dateStr' is assigned a value but never used  @typescript-eslint/no-unused-vars
  41:49  warning  'r' is defined but never used                 @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/ReservationConfirm.tsx
  7:24  warning  'ClockIcon' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/ReservationOverallSettings.tsx
   18:3   warning  'ChevronDownIcon' is defined but never used  @typescript-eslint/no-unused-vars
   53:3   warning  'reservationId' is defined but never used    @typescript-eslint/no-unused-vars
  112:85  error    Unexpected any. Specify a different type     @typescript-eslint/no-explicit-any
  151:83  error    Unexpected any. Specify a different type     @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/ReservationStatusBadge.tsx
  3:27  warning  'ClockIcon' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/ReservationSuccess.tsx
  16:9  warning  'formatTime' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/ReservationTimeline.tsx
  2:27  warning  'ClockIcon' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/ReservationTypeCard.tsx
  67:14  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/ReservationTypeCard.tsx:67:14
  65 |             style={{ backgroundColor: `${type.settings?.color || '#3B82F6'}20` }}
  66 |           >
> 67 |             <Icon
     |              ^^^^ This component is created during render
  68 |               className="size-5"
  69 |               style={{ color: type.settings?.color || '#3B82F6' }}
  70 |             />

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/ReservationTypeCard.tsx:57:16
  55 |   onToggleStatus,
  56 | }: ReservationTypeCardProps) {
> 57 |   const Icon = getCategoryIcon(type.settings?.category || 'event')
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ The component is created during render here
  58 |
  59 |   return (
  60 |     <Card className="hover:shadow-md transition-shadow">  react-hooks/static-components

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/ReservationTypeIcon.tsx
  29:56  warning  'solid' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/SlotSelector.tsx
  29:6  warning  React Hook useEffect has a missing dependency: 'loadSlots'. Either include it or remove the dependency array  react-hooks/exhaustive-deps

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/WeekView.tsx
  16:41  warning  'reservations' is defined but never usedtypescript-eslint/no-unused-vars
  30:20  error    Error: Cannot call impure function during render

`Math.random` is an impure function. Calling an impure function can produce unstable results that update unpredictably when the component happens to re-render. (https://react.dev/reference/rules/components-and-hooks-must-be-pure#components-and-hooks-must-be-idempotent).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/reservations/WeekView.tsx:30:20
  28 |   const getReservationsForSlot = (date: Date, time: string): ReservationSlotData[] => {
  29 |     // In real implementation, filter reservations by date and time
> 30 |     const random = Math.random()
     |                    ^^^^^^^^^^^^^ Cannot call impure function
  31 |     if (random < 0.3) {
  32 |       return [{
  33 |         id: `${format(date, 'yyyy-MM-dd')}-${time}`,  react-hooks/purity

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/rich-menus/CanvasEditor.tsx
  42:5  error  Error: Calling setState synchronously within an effect can trigger cascading renders

Effects are intended to synchronize state between React and external systems such as manually updating the DOM, state management libraries, or other platform APIs. In general, the body of an effect should do one or both of the following:
* Update external systems with the latest state from React.
* Subscribe for updates from some external system, calling setState in a callback function when external state changes.

Calling setState synchronously within an effect body causes cascading renders that can hurt performance, and is not recommended. (https://react.dev/learn/you-might-not-need-an-effect).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/rich-menus/CanvasEditor.tsx:42:5
  40 |   useEffect(() => {
  41 |     const newScale = CANVAS_WIDTH / size.width;
> 42 |     setScale(newScale);
     |     ^^^^^^^^ Avoid calling setState() directly within an effect
  43 |   }, [size.width]);
  44 |
  45 |   useEffect(() => {  react-hooks/set-state-in-effect
  51:7  error  Error: Calling setState synchronously within an effect can trigger cascading renders

Effects are intended to synchronize state between React and external systems such as manually updating the DOM, state management libraries, or other platform APIs. In general, the body of an effect should do one or both of the following:
* Update external systems with the latest state from React.
* Subscribe for updates from some external system, calling setState in a callback function when external state changes.

Calling setState synchronously within an effect body causes cascading renders that can hurt performance, and is not recommended. (https://react.dev/learn/you-might-not-need-an-effect).

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/rich-menus/CanvasEditor.tsx:51:7
  49 |       img.src = imageUrl;
  50 |     } else {
> 51 |       setImage(null);
     |       ^^^^^^^^ Avoid calling setState() directly within an effect
  52 |     }
  53 |   }, [imageUrl]);
  54 |                                               react-hooks/set-state-in-effect

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/rich-menus/DeployDialog.tsx
  13:26  warning  'setAsDefault' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/rich-menus/RichMenuCard.tsx
  241:17  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/rich-menus/RichMenuEditor.tsx
   34:10  warning  'cn' is defined but never used                                                                                                                                                                                                                                                           @typescript-eslint/no-unused-vars
   59:20  warning  'setSelected' is assigned a value but never used                                                                                                                                                                                                                                         @typescript-eslint/no-unused-vars
  370:15  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/settings/APIKeyDetailsDialog.tsx
  49:14  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/settings/ActiveSessionsList.tsx
  17:38  warning  'userId' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/settings/AuditLogDetailDialog.tsx
  22:28  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/settings/AvatarUpload.tsx
  15:32  warning  'userId' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/settings/DataImportForm.tsx
  23:50  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/settings/ImportPreview.tsx
  13:17  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/settings/NotificationSettings.tsx
  31:40  warning  'userId' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/settings/OrganizationForm.tsx
  15:20  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/settings/PasswordChangeForm.tsx
  103:21  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/settings/ProfileForm.tsx
  22:31  warning  'userId' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/settings/TwoFactorSetup.tsx
   17:34  warning  'userId' is defined but never used                                                                                                                                                                                                                                                       @typescript-eslint/no-unused-vars
  149:19  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/components/settings/UpgradePlanDialog.tsx
  57:3  warning  'currentPlan' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/csv-parser.ts
  106:9  warning  'MAX_ROWS' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/export/csv-exporter.ts
   16:24  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
   22:5   warning  'dateFormat' is assigned a value but never used  @typescript-eslint/no-unused-vars
   75:29  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  104:45  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  114:29  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  124:39  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  140:47  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  156:47  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  179:41  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  198:55  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any
  220:49  error    Unexpected any. Specify a different type         @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/export/json-exporter.ts
  15:24  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  38:9   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/line/messaging-api.ts
  298:20  error  A `require()` style import is forbidden  @typescript-eslint/no-require-imports

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/line/webhook.ts
  192:12  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/supabase/queries/forms.ts
   44:33  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   65:36  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  240:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/supabase/queries/friends.ts
   70:75  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   72:44  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  118:24  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  118:51  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/supabase/queries/messages.ts
  436:23  warning  'segment' is assigned a value but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/supabase/queries/reservations.ts
  5:6  warning  'ReservationType' is defined but never used  @typescript-eslint/no-unused-vars
  6:6  warning  'AvailableSlot' is defined but never used    @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/supabase/queries/segments.ts
   34:10  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   58:73  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  178:33  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  178:68  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  213:29  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  218:33  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  222:48  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/supabase/queries/tags.ts
    9:6   warning  'FriendTagInsert' is defined but never used  @typescript-eslint/no-unused-vars
   33:68  error    Unexpected any. Specify a different type     @typescript-eslint/no-explicit-any
  201:44  error    Unexpected any. Specify a different type     @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/utils/analytics-utils.ts
  290:51  warning  'index' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/lib/utils/reservation-utils.ts
   12:12  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
   24:12  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
   36:12  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
   48:12  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
   69:12  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
  122:12  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
  134:12  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
  147:12  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
  210:14  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
  228:12  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
  249:12  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/aggregate-analytics/index.ts
  43:14  warning  'req' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/cleanup-expired-invitations/index.ts
  14:14  warning  'req' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/deploy-rich-menu/index.ts
  203:33  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  203:51  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/process-ai-response/index.ts
   25:3   warning  'AISettings' is defined but never used    @typescript-eslint/no-unused-vars
  187:28  error    Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/process-ai-response/prompt-builder.ts
   11:33  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  143:59  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/process-auto-response/action-executor.ts
   15:18  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   22:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   49:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   64:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   67:15  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   90:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  150:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  194:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/process-auto-response/index.ts
   66:13  error  Unexpected any. Specify a different type              @typescript-eslint/no-explicit-any
   76:24  error  Unexpected any. Specify a different type              @typescript-eslint/no-explicit-any
   98:13  error  Unexpected any. Specify a different type              @typescript-eslint/no-explicit-any
  135:24  error  Unexpected any. Specify a different type              @typescript-eslint/no-explicit-any
  136:7   error  'logParams' is never reassigned. Use 'const' instead  prefer-const
  136:18  error  Unexpected any. Specify a different type              @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/process-auto-response/keyword-matcher.ts
   16:12  error    Unexpected any. Specify a different type       @typescript-eslint/no-explicit-any
   22:40  error    Unexpected any. Specify a different type       @typescript-eslint/no-explicit-any
   25:33  warning  'timezone' is assigned a value but never used  @typescript-eslint/no-unused-vars
   53:13  error    Unexpected any. Specify a different type       @typescript-eslint/no-explicit-any
   71:39  error    Unexpected any. Specify a different type       @typescript-eslint/no-explicit-any
   92:13  error    Unexpected any. Specify a different type       @typescript-eslint/no-explicit-any
  187:37  error    Unexpected any. Specify a different type       @typescript-eslint/no-explicit-any
  213:13  error    Unexpected any. Specify a different type       @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/process-auto-response/scenario-processor.ts
   26:13  error    Unexpected any. Specify a different type                   @typescript-eslint/no-explicit-any
   32:12  error    Unexpected any. Specify a different type                   @typescript-eslint/no-explicit-any
   38:51  error    Unexpected any. Specify a different type                   @typescript-eslint/no-explicit-any
   63:16  warning  'error' is defined but never used                          @typescript-eslint/no-unused-vars
   77:13  error    Unexpected any. Specify a different type                   @typescript-eslint/no-explicit-any
   79:3   warning  'context' is defined but never used                        @typescript-eslint/no-unused-vars
   79:12  error    Unexpected any. Specify a different type                   @typescript-eslint/no-explicit-any
  133:13  error    Unexpected any. Specify a different type                   @typescript-eslint/no-explicit-any
  134:17  error    Unexpected any. Specify a different type                   @typescript-eslint/no-explicit-any
  154:16  error    Unexpected any. Specify a different type                   @typescript-eslint/no-explicit-any
  156:7   error    'updatedContext' is never reassigned. Use 'const' instead  prefer-const

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/process-line-webhook/index.ts
   53:11  warning  'hashHex' is assigned a value but never used  @typescript-eslint/no-unused-vars
   63:13  error    Unexpected any. Specify a different type      @typescript-eslint/no-explicit-any
   94:13  error    Unexpected any. Specify a different type      @typescript-eslint/no-explicit-any
  175:13  error    Unexpected any. Specify a different type      @typescript-eslint/no-explicit-any
  176:10  error    Unexpected any. Specify a different type      @typescript-eslint/no-explicit-any
  218:13  error    Unexpected any. Specify a different type      @typescript-eslint/no-explicit-any
  239:13  error    Unexpected any. Specify a different type      @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/process-scheduled-messages/index.ts
  10:14  warning  'req' is defined but never used                    @typescript-eslint/no-unused-vars
  52:9   error    'errors' is never reassigned. Use 'const' instead  prefer-const

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/process-step-campaigns/index.ts
  37:14  warning  'req' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/process-stripe-webhook/index.ts
    6:38  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  124:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  151:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  173:44  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  218:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  263:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  309:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  328:13  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/process-url-click/index.ts
  239:38  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/reset-daily-usage/index.ts
  20:14  warning  'req' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/send-line-message/index.ts
  14:11  warning  'LineMessage' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/supabase/functions/send-reservation-reminders/index.ts
  43:14  warning  'req' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/tests/e2e-dashboard-test.spec.ts
  71:55  warning  'pageName' is defined but never used  @typescript-eslint/no-unused-vars

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/types/ai-response.ts
  182:33  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/types/auto-response.ts
  181:32  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/types/forms.ts
  56:33  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  58:29  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  62:22  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/types/friends.ts
  10:33  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/types/import.ts
  20:11  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  30:34  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

/Users/kadotani/Documents/dev-projects/GitHub/lme-manual-scraper/types/system.ts
  107:27  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

✖ 632 problems (403 errors, 229 warnings)
  5 errors and 0 warnings potentially fixable with the `--fix` option.

